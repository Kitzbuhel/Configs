version: "3.8"

services:

########## Auth Service DB ##########
    authPostgresDB:
        image: postgres
        environment:
            POSTGRES_DB: users
            POSTGRES_USER: admin
            POSTGRES_PASSWORD: admin
            POSTGRES_PORT: 5432
        networks:
            - authDB-adminer
            - authDB-authService

########## Auth Service ##########
    authService:
        image: sunset01/idp-auth-service:0.0.4
        depends_on:
            - authPostgresDB
        environment:
            spring.datasource.url: jdbc:postgresql://authPostgresDB:5432/users
            SPRING_DATASOURCE_USERNAME: admin
            SPRING_DATASOURCE_PASSWORD: admin
        networks:
            - authDB-authService
            - logging
            - kong

########## Adminer ##########
    adminer:
        image: adminer
        depends_on:
            - authPostgresDB
        networks:
            - kong
            - authDB-adminer

########## Kong API Gateway ##########
    kong:
        image: kong
        depends_on:
            - authService
            - adminer
        volumes:
            - ../kong:/usr/local/kong/declarative
        environment:
            KONG_DATABASE: "off"
            KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
            KONG_PROXY_ACCESS_LOG: /dev/stdout
            KONG_ADMIN_ACCESS_LOG: /dev/stdout
            KONG_PROXY_ERROR_LOG: /dev/stderr
            KONG_ADMIN_ERROR_LOG: /dev/stderr
            KONG_ADMIN_LISTEN: 0.0.0.0:8001
        ports:
            - "8000:8000"
            - "8001:8001"
        deploy:
            placement:
                constraints:
                    - node.role == manager
        networks:
            - kong
            - logging

########## Prometheus ##########
    prometheus:
        image: prom/prometheus
        ports:
            - "9090:9090"
        volumes:
            - ../prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        networks:
            - logging

########## Grafana ##########
    grafana:
        image: grafana/grafana
        ports:
            - "3000:3000"
        networks:
            - logging

networks:
    logging:
    authDB-adminer:
    authDB-authService:
    kong:
